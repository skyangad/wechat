
<html>
<body>


<style>
        .embeddedServiceHelpButton .helpButton .uiButton {
            background-color: #fff !important;
            font-family: "Arial", sans-serif;
            box-shadow: none !important;
			border: 2px solid #377551 !important;

        }

        .embeddedServiceHelpButton .helpButton .uiButton:focus {
            outline: 1px solid #377551;
        }

        .embeddedServiceIcon svg {
            display: inline-block;
            box-sizing: border-box;
            width: 2em;
            height: 2em;
            fill: var(--lwc-colorTextInverse, rgb(0, 0, 0)) !important;
        }

        .embeddedServiceSidebarMinimizedDefaultUI.helpButton {
            background-color: #fff !important;
            border-color: var(--lwc-esColorBackgroundAlt2, #377551) !important;
            border: 2px solid #377551 !important;
        }

        .embeddedServiceSidebarMinimizedDefaultUI {
            position: fixed;
            left: auto;
            bottom: 0;
            right: 12px;
            margin: 0;
            height: 46px;
            width: 90px;
            max-height: 100%;
            border-radius: 8px 8px 0 0;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            box-shadow: none !important;
            pointer-events: all;
            overflow: hidden;
            background-color: var(--lwc-esColorBackgroundAlt2, #fff) !important;
            border-color: var(--lwc-esColorBackgroundAlt2, #377551) !important;
            font-size: 16px;
            cursor: pointer;
            border: 2px solid #377551 !important;
        }

        /*.embeddedServiceHelpButton .helpButton .uiButton {
            background-color: #fff !important;
            font-family: "Salesforce Sans", sans-serif;
            border: 2px solid #377551;
        }*/

        .message {
            background-color: none !important;
            color: #000 !important;
            font-size: 14px;
            font-weight: 600;
            border: none;
        }

        .message a {
            color: #000 !important;
            text-decoration: none;
        }

        .embeddedServiceHelpButton .uiButton .helpButtonLabel .message a {
            color: Black
        }

        /*.embeddedServiceHelpButton .helpButton .uiButton:focus {
            outline: 1px solid #377551;
        }*/

        @font-face {
            font-family: 'Salesforce Sans';
            src: url('https://c1.sfdcstatic.com/etc/clientlibs/sfdc-aem-master/clientlibs_base/fonts/SalesforceSans-Regular.woff') format('woff'), url('https://c1.sfdcstatic.com/etc/clientlibs/sfdc-aem-master/clientlibs_base/fonts/SalesforceSans-Regular.ttf') format('truetype');
        }

        .embeddedServiceHelpButton .uiButton {
            font-weight: bold;
            font-size: 16px;
            margin: 2px 3px;
            padding: 4px 6px;
            min-width: 250px;
            max-width: 250px;
            text-decoration: none;
            text-align: center;
            border: 0;
            /* background: #dddfe1;*/
        }

        .embeddedServiceSidebar.layout-docked .dockableContainer {
            width: 350px;
            height: 450px;
        }

        .embeddedServiceSidebarMinimizedDefaultUI {
            min-width: 14em;
            max-width: 14em;
            width: 250px;
        }


        /*New Css added by Manoj*/

        .embeddedServiceHelpButton .embeddedServiceIcon::before {
            font-family: "embeddedserviceiconfont";
            font-size: 1.25em;
            content: attr(data-icon);
            speak: none;
            text-rendering: auto;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            color: #000;
        }

        .embeddedServiceHelpButton .embeddedServiceIcon {
            position: relative;
            z-index: 1;
            display: inline-block;
            margin-left: 0px;
            line-height: 1;
            vertical-align: top;
        }

        body {
            font-size: 100%;
        }

        button[embeddedService-chatHeader_chatHeader] {
            background: none;
            border: none;
            height: 32px;
            min-height: 32px;
            width: 32px;
            min-width: 32px;
        }

        #snapins_invite {
            background-color: #FFFFFF;
            font-family: "Salesforce Sans", sans-serif;
            overflow: visible;
            border-radius: 8px;
            visibility: hidden;
        }

        .embeddedServiceInvitation {
            background-color: transparent;
            max-width: 290px;
            max-height: 210px;
            -webkit-box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
            -moz-box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
            box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
        }

        @media only screen and (min-width: 48em) {
            /*mobile*/
            .embeddedServiceInvitation {
                max-width: 332px;
                max-height: 210px;
            }
        }

        .embeddedServiceInvitation>.embeddedServiceInvitationHeader {
            width: inherit;
            height: 50px;
            line-height: 32px;
            padding: 10px;
            color: #FFFFFF;
            background-color: #377551;
            overflow: initial;
            display: flex;
            justify-content: space-between;
            align-items: stretch;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }

        .embeddedServiceInvitationHeader #embeddedServiceAvatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
        }

        .embeddedServiceInvitationHeader .embeddedServiceTitleText {
            font-size: 18px;
            color: #FFFFFF;
            overflow: hidden;
            word-wrap: normal;
            white-space: nowrap;
            text-overflow: ellipsis;
            align-self: stretch;
            flex-grow: 1;
            max-width: 100%;
            margin: 0 12px;
        }

        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon {
            border: none;
            border-radius: 3px;
            cursor: pointer;
            position: relative;
            bottom: 3%;
            background-color: #fff;
            width: 32px;
            height: 32px;
            font-size: 23px;
            color: #377551;
        }

        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus {
            outline: none;
        }

        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus::before {
            content: " ";
            position: absolute;
            top: 11%;
            left: 7%;
            width: 85%;
            height: 85%;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            pointer-events: none;
        }

        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:active,
        .embeddedServiceCloseIcon:hover {
            background-color: #FFFFFF;
            color: rgba(0, 0, 0, 0.7);
            opacity: 0.7;
        }

        .embeddedServiceInvitation>.embeddedServiceInvitationBody {
            background-color: #FFFFFF;
            max-height: 110px;
            min-width: 260px;
            margin: 0 8px;
            font-size: 14px;
            line-height: 20px;
            overflow: auto;
        }

        .embeddedServiceInvitationBody p {
            color: #333333;
            padding: 8px;
            margin: 12px 0;
            text-align: center;
        }

        .embeddedServiceInvitationFooter>.embeddedServiceActionButton {
            font-size: 14px;
            max-height: 40px;
            border: 1px solid #377551;
            border-radius: 4px;
            padding: 10px;
            margin: 4px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
        }

        .embeddedServiceInvitationFooter>#acceptInvite {
            background-color: #FFFFFF;
            color: #377551;
        }

        .embeddedServiceInvitationFooter>#rejectInvite {
            background-color: #FFFFFF;
            color: #377551;
        }

        .embeddedServiceInvitation>.embeddedServiceInvitationFooter {
            width: inherit;
            color: #377551;
            text-align: center;
            background-color: #fff;
            padding: 10px;
            max-height: 100px;
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;
        }
 
        .logo, .navbar, .wrapper {
            opacity: 1 !important;
        }

        .embeddedServiceHelpButton .uiButton .helpButtonLabel .message {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            text-decoration: none !important;
        }

        .embeddedServiceSidebarMinimizedDefaultUI .content {
            display: block;
            align-items: center;
            padding: 0 8px;
            height: 100%;
            color: var(--lwc-colorTextInverse,rgb(255, 255, 255));
            justify-content: center;
            flex-direction: row;
            /* border: 2px solid # 377551 !important;*/
            border-radius: 8px 8px 0 0;
        }

        .embeddedServiceSidebarMinimizedDefaultUI .messageContent {
            position: relative;
            display: flex;
            align-self: stretch;
            margin: 12px;
            flex-grow: 1;
            align-items: center;
            min-width: 0;
            max-width: 100%;
        }

        .embeddedServiceHelpButton .helpButton .uiButton :hover {
            background-color: transparent !important;
            font-family: "Salesforce Sans", sans-serif;
        }
		.embeddedServiceHelpButton .helpButton .uiButton:hover {
           background-color: #fff !important;
           font-family: "Arial", sans-serif;
           box-shadow: none !important;
  }

		
		
    </style>

    <!-- Comments:Start of Invitations PopUp window-->
    <div class="embeddedServiceInvitation" id="snapins_invite" inert="true" aria-live="assertive" role="dialog" aria-atomic="true">
        <div class="embeddedServiceInvitationHeader" aria-labelledby="snapins_titletext" aria-describedby="snapins_bodytext">
            <img id="embeddedServiceAvatar"></img>
            <span class="embeddedServiceTitleText" id="snapins_titletext">Need help?</span>
            <button type="button" id="closeInvite" class="embeddedServiceCloseIcon" aria-label="Exit invitation">&times;</button>
        </div>
        <div class="embeddedServiceInvitationBody">
            <p id="snapins_bodytext">How can we help you?</p>
        </div>
        <div class="embeddedServiceInvitationFooter" aria-describedby="snapins_bodytext">
            <button type="button" class="embeddedServiceActionButton" id="rejectInvite">Close</button>
            <button type="button" class="embeddedServiceActionButton" id="acceptInvite">Start Chat</button>
        </div>
    </div>

    <!--Comments:Call to the function onlick of Accept/Reject and close of Invitation PopUp-->
    <script type='text/javascript'> 
        (function() {
            document.getElementById('closeInvite').onclick = function() { embedded_svc.inviteAPI.inviteButton.rejectInvite(); };
            document.getElementById('rejectInvite').onclick = function() { embedded_svc.inviteAPI.inviteButton.rejectInvite(); }; // use this API call to reject invitations
            document.getElementById('acceptInvite').onclick = function() { embedded_svc.inviteAPI.inviteButton.acceptInvite(); }; // use this API call to start chat from invitations
            document.addEventListener('keyup', function(event) { if (event.keyCode == 27) { embedded_svc.inviteAPI.inviteButton.rejectInvite(); }})
        })();
    </script>
    <!-- End of Invitations -->

    <!--Comments: Script to initialization of Chat using chat Button,Check whether Agent is Online or Not in background,if agent is offline "Leave Message" is Enable else calls Invitaion PopUp window, Need to add immediately before</body> tag-->
    <script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
    <script type='text/javascript'>
        var initESW = function(gslbBaseURL) {
            embedded_svc.settings.displayHelpButton = true; //Or false
            embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'
            
            var linkText = "Leave Message";
            var leaveMessage = linkText.link("https://growndiamondcorp.secure.force.com/LeadGeneration/");

            //embedded_svc.settings.defaultMinimizedText = '...'; //(Defaults to Chat with an Expert)
            //embedded_svc.settings.disabledMinimizedText = '...'; //(Defaults to Agent Offline)
        
            embedded_svc.settings.disabledMinimizedText = leaveMessage ;
        
            //embedded_svc.settings.loadingText = ''; //(Defaults to Loading)
            //embedded_svc.settings.storageDomain = 'yourdomain.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

            // Settings for Chat
            //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
                // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
                // Returns a valid button ID.
            //};
            //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
            //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
            //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us)

            embedded_svc.settings.enabledFeatures = ['LiveAgent'];
            embedded_svc.settings.entryFeature = 'LiveAgent';

            embedded_svc.init(
                'https://growndiamondcorp.my.salesforce.com',
                'https://growndiamondcorp.secure.force.com/GDChat',
                gslbBaseURL,
                '00D7F000003ffgT',
                'BDMChatAgents',
                {
                    baseLiveAgentContentURL: 'https://c.la1-c1-ukb.salesforceliveagent.com/content',
                    deploymentId: '5727F000000HGdo',
                    buttonId: '5737F000000HCh6',
                    baseLiveAgentURL: 'https://d.la1-c1-ukb.salesforceliveagent.com/chat',
                    eswLiveAgentDevName: 'EmbeddedServiceLiveAgent_Parent04I7F000000GnqpUAC_1763d03b898',
                    isOfflineSupportEnabled: false
                }
            );
        };

        if (!window.embedded_svc) {
            var s = document.createElement('script');
            s.setAttribute('src', 'https://growndiamondcorp.my.salesforce.com/embeddedservice/5.0/esw.min.js');
            s.onload = function() {
                initESW(null);
            };
            document.body.appendChild(s);
        } else {
            initESW('https://service.force.com');
        }
    </script>
	</html>
	</body>
